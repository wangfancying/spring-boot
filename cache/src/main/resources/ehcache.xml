<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:noNamespaceSchemaLocation="http://ehcache.org/ehcache.xsd">

	<!-- 磁盘缓存位置 -->
	<diskStore path="java.io.tmpdir/ehcache"/>
	<!--
			磁盘存储:将缓存中暂时不使用的对象,转移到硬盘,类似于Windows系统的虚拟内存
			path:指定在硬盘上存储对象的路径
			path可以配置的目录有：
				user.home（用户的家目录）
				user.dir（用户当前的工作目录）
				java.io.tmpdir（默认的临时目录）
				ehcache.disk.store.dir（ehcache的配置目录）
				绝对路径（如：d:\\ehcache）
			查看路径方法：String tmpDir = System.getProperty("java.io.tmpdir");
	-->

	<!-- 默认缓存 -->
	<defaultCache
			maxEntriesLocalHeap="10000"
			eternal="false"
			timeToIdleSeconds="120"
			timeToLiveSeconds="120"
			maxEntriesLocalDisk="10000000"
			diskExpiryThreadIntervalSeconds="120"
			memoryStoreEvictionPolicy="LRU">
		<persistence strategy="localTempSwap"/>
	</defaultCache>

	<!--
	name：Cache 的唯一标识
	maxElementsInMemory：内存中允许存储的最大的元素个数
	maxElementsOnDisk：硬盘最大缓存个数，0代表无限个
	clearOnFlush：内存数量最大时是否清除
	eternal：缓存对象是否永久有效，如果是，超时设置将被忽略
	overflowToDisk：内存不足（超过 maxElementsInMemory）时，是否启用磁盘缓存
	timeToIdleSeconds：设置对象在失效前的允许闲置时间（单位：秒）。仅当eternal=false对象不是永久有效时使用，可选属性，默认值是0，也就是可闲置时间无穷大
	timeToLiveSeconds：缓存数据的生存时间（TTL），也就是一个元素从构建到消亡的最大时间间隔值，这只能在元素不是永久驻留时有效，如果该值是0就意味着元素可以停顿无穷长的时间
	diskPersistent：是否将缓存数据持久化到磁盘上，如果为 true，JVM 重启数据依然存在。默认值是false
	diskSpoolBufferSizeMB：这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区
	diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认是120秒
	memoryStoreEvictionPolicy：当达到 maxElementsInMemory 限制时，Ehcache 将根据指定策略清除内存。默认为 LRU（最近最少使用），其他策略有 FIFO（先进先出），LFU（较少使用）
	-->

	<!-- 自定义缓存 -->
	<cache name="myEhCache"
		   maxElementsInMemory="1000"
		   eternal="false"
		   timeToIdleSeconds="50"
		   timeToLiveSeconds="50"
		   overflowToDisk="false"
		   memoryStoreEvictionPolicy="LRU"/>
</ehcache>